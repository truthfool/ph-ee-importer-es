{"attributes":{"description":"","kibanaSavedObjectMeta":{"searchSourceJSON":"{"query":{"language":"kuery","query":""},"filter":[]}"},"title":"Vega Visualisation 2: All process with elapsed time per task","uiStateJSON":"{}","version":1,"visState":"{"title":"Vega Visualisation 2: All process with elapsed time per task","type":"vega","aggs":[],"params":{"spec":"{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"title\": \"Event counts from all indexes\",\n  \"data\": {\n    \"url\": {\n      \"index\": \"_all\",\n      \"body\": {\n        \"aggs\": {\n          \"categories\": {\n            \"terms\": {\"field\": \"value.processInstanceKey\"},\n            \"aggs\": {\n              \"duration\": {\n           scripted_metric: {\n                  init_script: state.responses = ['start':0,'stop':0]\n                  map_script: def intent = doc['intent'].value; def time = doc['timestamp'].value.getMillis(); state.responses.start = time; if (intent.contains('COMPLETED') && time > state.responses['stop']) { state.responses.stop = time;} else if(intent.contains('CREATED') && time < state.responses['start'] ) {state.responses.start = time;}\n                  combine_script: state.responses\n                  reduce_script: def diff = null;for (responses in states) {diff = responses['stop'] - responses['start'];}return diff;\n                }\n              }\n            }\n          }\n        },\n        \"size\": 0,\n        \"query\": {\n          \"bool\": {\n            \"must\": [],\n            \"filter\": [\n              {\"match_all\": {}},\n              {\"match_phrase\": {\"value.bpmnProcessId\": \"mpesa-flow-v3\"}}\n            ],\n            \"should\": [],\n            \"must_not\": []\n          }\n        }\n      }\n    },\n    \"format\": {\"property\": \"aggregations.categories.buckets\"}\n  },\n  \"encoding\": {\n    \"x\": {\n      \"field\": \"duration.value\",\n      \"type\": \"temporal\",\n      \"timeUnit\": \"seconds\",\n      \"axis\": {\"title\": \"Time taken in miliseconds \"}\n    },\n    \"y\": {\n      \"field\": \"key\",\n      \"type\": \"nominal\",\n      \"axis\": {\"title\": \"Process Instance\"}\n    },\n    \"color\": {\"field\": \"key\", \"type\": \"nominal\"}\n  },\n  \"layer\": [\n    {\n      \"mark\": \"rect\",\n      \"encoding\": {\n        \"color\": {\n          \"field\": \"duration.value\",\n          \"type\": \"temporal\",\n          \"timeUnit\": \"milliseconds\",\n          \"title\": \"Time elapsed\",\n          \"legend\": {\"direction\": \"horizontal\", \"gradientLength\": 120}\n        }\n      }\n    },\n    {\n      \"mark\": \"text\",\n      \"encoding\": {\n        \"text\": {\"field\": \"duration.value\",   \"type\": \"temporal\",\n          \"timeUnit\": \"seconds\"},\n        \"color\": {\n          \"condition\": {\n            \"test\": \"datum['duration.value'] > 120000\",\n            \"value\": \"red\"\n          },\n          \"value\": \"black\"\n        }\n      }\n    }\n  ],\n  \"config\": {\"axis\": {\"grid\": true, \"tickBand\": \"extent\"}}\n}"}}"},"coreMigrationVersion":"7.13.2","id":"d8a2f570-61a1-11ec-a438-afa3cbc0f058","migrationVersion":{"visualization":"7.13.1"},"references":[],"type":"visualization","updated_at":"2022-01-17T08:38:18.374Z","version":"WzEwNDkyLDEzXQ=="}
{"exportedCount":1,"missingRefCount":0,"missingReferences":[]}